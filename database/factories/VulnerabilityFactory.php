<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Vulnerability>
 */
class VulnerabilityFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => $this->faker->text($maxNbChars = 50),
            'description' => $this->faker->paragraph(),
            'risk' => $this->faker->numberBetween(0, 10),
            'social_score' => $this->faker->numberBetween(0, 10),
            'severity' => $this->faker->randomElement(['low', 'medium', 'high', 'critical']),
            'first_seen' => $this->faker->dateTimeBetween('-1 year', 'now'),
            'last_identified_on' => $this->faker->dateTimeBetween('-1 year', 'now'),
            'CVEs' => $this->faker->randomElement([
                json_encode(['cves' => [$this->faker->regexify('CVE-\d{4}-\d{5}')]]),
                json_encode(['cves' => [$this->faker->regexify('CVE-\d{4}-\d{5}'), $this->faker->regexify('CVE-\d{4}-\d{5}')]]),
                json_encode(['cves' => [$this->faker->regexify('CVE-\d{4}-\d{5}'), $this->faker->regexify('CVE-\d{4}-\d{5}'), $this->faker->regexify('CVE-\d{4}-\d{5}')]]),
            ]),
            'patch_priority' => $this->faker->randomElement(['low', 'medium', 'high', 'critical']),
            'impact' => $this->faker->text(50),
            'solution' => $this->faker->text(50),
            'workaround' => $this->faker->text(50),
            'result' => $this->faker->text(20),
            'status' => $this->faker->randomElement([0, 1]), // 0-Unpatched, 1-Patched
            'created_at' => now(),
            'updated_at' => now(),
            
        ];
    }
}
